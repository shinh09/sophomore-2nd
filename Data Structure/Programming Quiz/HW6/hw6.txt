Problem Description
Write a method to check if a given binary tree (provided as a TreeNode root) is an AVL tree. If the tree is not an AVL tree, the method should provide a reason why it is not. An AVL tree is a self-balancing binary search tree where the height difference between the left and right subtrees cannot be more than one for all nodes.

Input
TreeNode root: A TreeNode object representing the root node of the binary tree. If the tree is empty, root will be null.

Output                        
The method returns a value from the BalanceStatus enum indicating whether the tree is an AVL tree or not, and if not, why it is not.

enum BalanceStatus {

    AVL,              // This tree is an AVL tree

    NOT_AVL_DUE_TO_HEIGHT,         

// This tree is not an AVL tree due to the difference in height between the left and right subtrees

    NOT_AVL_DUE_TO_BST_PROPERTY // This tree is not even BST.

}

Constraints
The number of nodes is between 0 and 10,000.

Node values are integers between -100 and 100.